@page "/Teachers/addteacher"

@using Studentify.Web.Services
@using Studentify.Models
@using System.Threading.Tasks

<form model="@Teacher" method="post">
    <h3>Add Teacher</h3>
    <hr />
    <div class="form-group row">
        <label for="TeacherName" class="col-sm-2 col-form-label">
            TeacherName
        </label>
        <div class="col-sm-10">
            <InputText id="TeacherName" class="form-control" placeholder="TeacherName"
                       @bind-Value="Teacher.TeacherName" />
        </div>
    </div>
    <div class="form-group row">
        <label for="ImageUrl" class="col-sm-2 col-form-label">
            Email
        </label>
        <div class="col-sm-10">
            <InputText id="ImageUrl" class="form-control" placeholder="ImageUrl"
                       @bind-Value="Teacher.ImageUrl" />
        </div>
    </div>
    <div class="form-group row">
        <label for="ImageUrl" class="col-sm-2 col-form-label">
            Courses
        </label>
        <div class="col-sm-10">
            <InputSelect class="form-control" @bind-Value="@Teacher.Courses">
                @foreach (var course in Teacher.Courses)
                {
                    <option value="@course.CourseName">@course.CourseName</option>
                }
            </InputSelect>
        </div>
    </div>

</form>



@code {

    [Inject]
    public ITeacherService TeacherService { get; set; }

    public Teacher Teacher { get; set; } = new Teacher();


    //public Course Course { get; set; }

    //[Inject]
    //public ICourseService CourseService { get; set; }

    //public List<Course> Courses { get; set; } = new List<Course>();

    //[Parameter]
    //public string Id { get; set; }

    //protected async override Task OnInitializedAsync()
    //{
    //    int.TryParse(Id, out int employeeId);

    //    if (employeeId != 0)
    //    {
    //        Teacher = await TeacherService.GetTeacher(int.Parse(Id));
    //    }
    //    else
    //    {
    //        Teacher = new Teacher
    //        {
    //            TeacherName = @Teacher.TeacherName,
    //            ImageUrl = @Teacher.ImageUrl,
    //            Courses = @Teacher.Courses
    //        };
    //    }

    //Courses = (await CourseService.GetCourses()).ToList();
    //Mapper.Map(Teacher, EditTeacherModel);
}
}
