@page "/Teachers/addteacher"

@using Studentify.Web.Services
@using Studentify.Models
@using System.Threading.Tasks


<form action="api/teachers" model="@Teacher" method="post">
    <h3>Add Teacher</h3>
    <hr />

    <div class="form-group row">
        <label for="TeacherName" class="col-sm-2 col-form-label">
            Teachername
        </label>
        <div class="col-sm-10">
            <input text id="TeacherName" class="form-control" placeholder="Teacher Full Name" />
        </div>
    </div>

    <div class="form-group row">
        <label for="ImageUrl" class="col-sm-2 col-form-label">
            ImageUrl
        </label>
        <div class="col-sm-10">
            <input text id="ImageUrl" class="form-control" placeholder="Images/Teacher1.png" />
        </div>
    </div>
    
    <div class="form-group row">
        <label for="Courses" class="col-sm-2 col-form-label">
            Course
        </label>
        <div class="col-sm-10">
            <inputtext id="Courses" class="form-control" placeholder="Courses" />
        </div>
    </div>
    @*<div class="form-group row">
            <label for="imageurl" class="col-sm-2 col-form-label">
                courses
            </label>
            <div class="col-sm-10">
                <inputselect class="form-control" @bind-value="@teacher.courses">
                    @foreach (var course in teacher.courses)
                    {
                        <option value="@course.coursename">@course.coursename</option>
                    }
                </inputselect>
            </div>
        </div>*@
    <button type="submit" class="btn btn-success">Add Teacher</button>
</form>





@code {

    [Inject]
    public ITeacherService TeacherService { get; set; }

    public Teacher Teacher { get; set; } = new Teacher();

    public IEnumerable<Course> Courses { get; set; }

    //[Parameter]
    //public string Id { get; set; }

    protected async override Task OnInitializedAsync()
    {
        Teacher = await TeacherService.CreateTeacher(Teacher);
    }
}
