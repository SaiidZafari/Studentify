@page "/teachers"
@using Studentify.Models
@using Studentify.Web.Services
@using Microsoft.AspNetCore.Components;
@using System.Collections.Generic;
@using System.Linq;
@using System.Threading.Tasks;

<h3>Teachers</h3>


<div class="container-fluid border p-2">
    <div class="row pl-3">
        @if (Teachers == null)
        {
            <h3>Loading</h3>
        }
        else
        {
            <div class="col-3 border mt-1">
                <h4>Sort by</h4>
                <form>
                    <div class="form-check">
                        <input class="form-check-input" type="radio" name="sort" value="name" checked />
                        <label class="form-check-label" for="Name">Teacher Name</label>
                    </div>
                    <div class="form-check">
                        <input class="form-check-input" type="radio" name="sort" value="id" />
                        <label class="form-check-label" for="id">Teacher Id</label>
                    </div>
                </form>
            </div>
            <div class="col-9 pt-1">
                @foreach (var teacher in Teachers)
                {
                    <div class="row">
                        <div class="col-3">
                            <img class="d-block w-auto mx-auto" style="max-height:200px" src="@(teacher.ImageUrl == null? "/images/default.png" : teacher.ImageUrl)" alt="@teacher.TeacherName" />
                        </div>
                        <div class="col-7">
                            <h4>@teacher.TeacherName</h4>
                            <p>Lorem ipsum dolor sit amet consectetur, adipisicing elit. Facilis eius qui, non modi sint a.</p>
                        </div>
                        <div class="col-2 d-flex flex-row">
                            <button class="btn btn-secondary align-self-end">Details</button>
                        </div>
                    </div>
                    <hr />
                }
            </div>
        }
    </div>
</div>









@*@if (Teachers == null)
{
    <div class="spiner"></div>
}
else
{
<div>
 <table border="1">
            <tr>
                <th>Teacher Name</th>
                <th>ImageUrl</th>
           </tr>
    @foreach (var teacher in Teachers)
    {
            <tr>
                <td>@teacher.TeacherName</td>
                <td>@teacher.ImageUrl</td>
            </tr>
    }</table>
</div>

<hr/>

<div class="card-deck">
    @foreach (var teacher in Teachers)
        {
            <div class="card m-3" style="min-width: 18rem; max-width:30.5%;">
                <div class="card-header">
                    <h3>@teacher.TeacherName</h3>
                </div>
                <img class="card-img-top imageThumbnail" src="@teacher.ImageUrl" />

            </div>
        }
</div>

}*@


 



@code {

    [Inject]
	public ITeacherService TeacherService { get; set; }

	public IEnumerable<Teacher> Teachers { get; set; }
    
    protected override async Task OnInitializedAsync()
	{
		Teachers = (await TeacherService.GetTeachers()).ToList();
	}

}