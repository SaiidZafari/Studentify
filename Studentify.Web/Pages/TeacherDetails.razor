@page "/TeacherDetails/{id}"
@*@inherits TeacherDetailsBase*@

@using Studentify.Web.Services
@using Studentify.Models
@using System.Threading.Tasks
@using Microsoft.AspNetCore.Components


<div class="lapDiv"></div>
<div class=" container">
    <h3>Teacher Details</h3>

    <div class="row justify-content-center m-3">
        <div class="col-sm-4">
            <div class="card">
                <div class="card-header">
                    <h1>@Teacher.TeacherName</h1>
                </div>

                <div class="card-body text-center">
                    <img class="card-img-top" src="@Teacher.ImageUrl" />

                    <h4>Teacher ID : @Teacher.TeacherId</h4>
                    @foreach (var teacherCurse in @Teacher.Courses)
                    {

                        <table class="table-sm">
                            <tr>
                                <td><h4>Course:</h4></td>
                                <td> @teacherCurse.CourseName</td>
                            </tr>
                            <tr>
                                <td><h6>Description:</h6></td>
                                <td> @teacherCurse.Description</td>
                            </tr>
                        </table>

                    }

                </div>
                <div class="card-footer text-center">
                    <a href="/Teachers" class="btn btn-primary">Back</a>
                    <a href="@($"Teachers/editteacher/{Teacher.TeacherId}")" class="btn btn-primary">Edit</a>
                    <button type="button" class="btn btn-danger m-1" @onclick="Delete_Teacher"> Delete </button>
                </div>
            </div>
        </div>
    </div>
</div>
    @code {

        public Teacher Teacher { get; set; } = new Teacher();

        [Inject]
        public ITeacherService TeacherService { get; set; }

        [Parameter]
        public string Id { get; set; }

        [Parameter]
        public EventCallback<int> OnTeacherDeleted { get; set; }

        [Inject]
        public NavigationManager NavigationManager { get; set; }

        protected async override Task OnInitializedAsync()
        {
            Teacher = await TeacherService.GetTeacher(int.Parse(Id));
        }

        protected async Task Delete_Teacher()
        {
            await TeacherService.DeleteTeacher(Teacher.TeacherId);
            await OnTeacherDeleted.InvokeAsync(Teacher.TeacherId);
            NavigationManager.NavigateTo("/Teachers", true);
        }
    }
