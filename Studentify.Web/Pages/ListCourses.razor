@page "/courses"

@inject ICourseService courseService;

<section class="container pb-5 lapDiv" id="top">

    <h1 class="display-3">Courses</h1>
    <p>
        Nemo animi soluta ratione quisquam, dicta ab cupiditate iure eaque? Repellendus voluptatum, magni impedit eaque delectus, beatae maxime temporibus maiores quibusdam quasi rem magnam ad perferendis iusto.
    </p>

    @*Action Will bind search to http *@
    <form action="/courses/@SearchTerm" method="get">
        <div class="input-group flex-center w-50">
            <input class="form-control" placeholder="Find course" @bind-value="@SearchTerm" />
            <div class="input-group-append">
                <button type="submit" class="btn btn-info ml-3">Search</button>
            </div>
        </div>
    </form>

    <h3 class="text-center mt-5">Popular courses</h3>

    <div>
        <div class="row">
            @if (Courses == null)
            {
                <div class="spinner"></div>
            }
            else
            {

            <PopularCourses Courses="@Courses"/>

                <p>usual one here</p>


            }
        </div>
    </div>
</section>

    <div class="d-flex justify-content-center pb-3">
        <a class="text-center" href="/courses/#top">Back to top <span class="oi oi-arrow-top"></span></a>
    </div>

    @code
{
        [Inject]
        public ICourseService CourseService { get; set; }


        public IEnumerable<Course> Courses { get; set; }

        [Parameter]
        public string SearchTerm { get; set; } = "";

        protected override async Task OnInitializedAsync()
        {
            Courses = (await CourseService.GetCourses()).ToList();
        }

    }